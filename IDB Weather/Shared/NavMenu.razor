@inject AppState AppState

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">IDB Weather</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-cloud" aria-hidden="true"></span> Current Weather
            </NavLink>
        </div>        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Forecast
            </NavLink>
        </div>
        <hr style="color: white"/>
        <div class="nav-item px-3">
            <div style="color: white; margin-left: 15px">
                <span class="oi oi-moon" aria-hidden="true"></span> View mode
            </div>
            <br />
            <div style="margin: 8px 40px">
                <span class="labelSmall" style="color: white">Light</span>
                &nbsp;
                <FluentSwitch ValueChanged="@((e) => OnModeChanged(e))" style="vertical-align: middle"></FluentSwitch>
                &nbsp;
                <span class="labelSmall" style="color: white">Dark</span>
            </div>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public void OnModeChanged(bool mode)
    {
        AppState.SetLightMode(mode == true ? 0 : 1);
    }
}
